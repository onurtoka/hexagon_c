<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="900" viewBox="0 0 1200 900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- Gradients for different layer types -->
    <linearGradient id="applicationGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#e3f2fd;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#bbdefb;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="domainGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#f3e5f5;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#e1bee7;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="adapterGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#e8f5e8;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#c8e6c9;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="infraGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#fff3e0;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#ffcc80;stop-opacity:1" />
    </linearGradient>
    
    <!-- Arrow marker -->
    <defs>
      <marker id="arrowhead" markerWidth="10" markerHeight="7" 
              refX="9" refY="3.5" orient="auto">
        <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
      </marker>
    </defs>
  </defs>

  <!-- Background -->
  <rect width="1200" height="900" fill="#f8f9fa"/>

  <!-- Title -->
  <text x="600" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#2c3e50">
    B_Hexagon Project - Code Flow Diagram
  </text>
  <text x="600" y="55" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" fill="#7f8c8d">
    Hexagonal Architecture with ZeroMQ RADIO/DISH Pattern
  </text>

  <!-- Layer Labels -->
  <text x="50" y="120" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">Application Layer</text>
  <text x="50" y="300" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">Domain Layer</text>
  <text x="50" y="580" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">Adapter Layer</text>
  <text x="50" y="780" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">Infrastructure</text>

  <!-- 1. Main Function (Application Entry Point) -->
  <rect x="100" y="140" width="180" height="80" rx="10" fill="url(#applicationGrad)" stroke="#1976d2" stroke-width="2"/>
  <text x="190" y="165" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1976d2">main()</text>
  <text x="190" y="185" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#1565c0">Program Entry Point</text>
  <text x="190" y="200" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#0d47a1">Dependency Injection</text>

  <!-- 2. CalculatorService Creation -->
  <rect x="320" y="320" width="160" height="70" rx="8" fill="url(#domainGrad)" stroke="#7b1fa2" stroke-width="2"/>
  <text x="400" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#7b1fa2">CalculatorService</text>
  <text x="400" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#6a1b9a">Constructor</text>

  <!-- 3. ZeroMQDataSender Creation -->
  <rect x="520" y="600" width="160" height="70" rx="8" fill="url(#adapterGrad)" stroke="#388e3c" stroke-width="2"/>
  <text x="600" y="625" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#388e3c">ZeroMQDataSender</text>
  <text x="600" y="645" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#2e7d32">Constructor</text>

  <!-- 4. ProcessTrackUseCase Creation -->
  <rect x="520" y="320" width="160" height="70" rx="8" fill="url(#domainGrad)" stroke="#7b1fa2" stroke-width="2"/>
  <text x="600" y="340" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#7b1fa2">ProcessTrackUseCase</text>
  <text x="600" y="355" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#6a1b9a">Constructor</text>
  <text x="600" y="370" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#4a148c">(wires dependencies)</text>

  <!-- 5. ZeroMQDataHandler Creation -->
  <rect x="320" y="600" width="160" height="70" rx="8" fill="url(#adapterGrad)" stroke="#388e3c" stroke-width="2"/>
  <text x="400" y="620" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#388e3c">ZeroMQDataHandler</text>
  <text x="400" y="635" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#2e7d32">Constructor</text>
  <text x="400" y="650" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1b5e20">(DISH socket setup)</text>

  <!-- 6. ZeroMQ Infrastructure Setup -->
  <rect x="100" y="800" width="200" height="60" rx="8" fill="url(#infraGrad)" stroke="#f57c00" stroke-width="2"/>
  <text x="200" y="825" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#f57c00">ZeroMQ Context</text>
  <text x="200" y="845" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#ef6c00">UDP Multicast Setup</text>

  <rect x="320" y="800" width="180" height="60" rx="8" fill="url(#infraGrad)" stroke="#f57c00" stroke-width="2"/>
  <text x="410" y="820" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#f57c00">DISH Socket</text>
  <text x="410" y="835" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#ef6c00">udp://239.255.0.1:7779</text>
  <text x="410" y="850" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#e65100">Group: TRACK_DATA_UDP</text>

  <rect x="520" y="800" width="180" height="60" rx="8" fill="url(#infraGrad)" stroke="#f57c00" stroke-width="2"/>
  <text x="610" y="820" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#f57c00">RADIO Socket</text>
  <text x="610" y="835" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#ef6c00">UDP Multicast Sender</text>
  <text x="610" y="850" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#e65100">Group: PROCESSED_DATA</text>

  <!-- 7. Runtime Loop -->
  <rect x="750" y="140" width="180" height="100" rx="10" fill="#ffebee" stroke="#d32f2f" stroke-width="2"/>
  <text x="840" y="165" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#d32f2f">startReceiving()</text>
  <text x="840" y="185" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#c62828">Infinite Loop</text>
  <text x="840" y="205" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#b71c1c">Blocks on UDP Messages</text>
  <text x="840" y="225" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#b71c1c">zmq_msg_recv()</text>

  <!-- Runtime Flow Boxes -->
  <rect x="750" y="280" width="160" height="50" rx="6" fill="#e8f5e8" stroke="#4caf50" stroke-width="1.5"/>
  <text x="830" y="300" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#4caf50">parseJson()</text>
  <text x="830" y="315" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#388e3c">JSON â†’ TrackData</text>

  <rect x="750" y="350" width="160" height="50" rx="6" fill="#e8f5e8" stroke="#4caf50" stroke-width="1.5"/>
  <text x="830" y="370" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#4caf50">onDataReceived()</text>
  <text x="830" y="385" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#388e3c">Use Case Call</text>

  <rect x="750" y="420" width="160" height="50" rx="6" fill="#f3e5f5" stroke="#9c27b0" stroke-width="1.5"/>
  <text x="830" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#9c27b0">calculateDelay()</text>
  <text x="830" y="455" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#7b1fa2">Domain Logic</text>

  <rect x="750" y="490" width="160" height="50" rx="6" fill="#e8f5e8" stroke="#4caf50" stroke-width="1.5"/>
  <text x="830" y="510" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#4caf50">sendData()</text>
  <text x="830" y="525" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#388e3c">RADIO Broadcast</text>

  <!-- Data Flow Objects -->
  <rect x="950" y="280" width="120" height="40" rx="20" fill="#fff8e1" stroke="#ffc107" stroke-width="1.5"/>
  <text x="1010" y="295" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#ff8f00">TrackData</text>
  <text x="1010" y="310" text-anchor="middle" font-family="Arial, sans-serif" font-size="8" fill="#f57c00">Input Object</text>

  <rect x="950" y="420" width="140" height="40" rx="20" fill="#fff8e1" stroke="#ffc107" stroke-width="1.5"/>
  <text x="1020" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" font-weight="bold" fill="#ff8f00">DelayCalculatedTrackData</text>
  <text x="1020" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="8" fill="#f57c00">Output Object</text>

  <!-- Flow Arrows -->
  <!-- Main to CalculatorService -->
  <line x1="280" y1="180" x2="320" y2="340" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <text x="300" y="250" font-family="Arial, sans-serif" font-size="10" fill="#555">1. Create</text>

  <!-- Main to ZeroMQDataSender -->
  <line x1="280" y1="200" x2="520" y2="620" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <text x="400" y="410" font-family="Arial, sans-serif" font-size="10" fill="#555">2. Create</text>

  <!-- Components to UseCase -->
  <line x1="480" y1="355" x2="520" y2="355" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <text x="485" y="345" font-family="Arial, sans-serif" font-size="9" fill="#555">3. Wire</text>

  <!-- UseCase to ZeroMQDataHandler -->
  <line x1="280" y1="210" x2="320" y2="620" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <text x="250" y="415" font-family="Arial, sans-serif" font-size="10" fill="#555" transform="rotate(-65 250 415)">4. Create &amp; Wire</text>

  <!-- Infrastructure setup -->
  <line x1="400" y1="670" x2="410" y2="800" stroke="#f57c00" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="600" y1="670" x2="610" y2="800" stroke="#f57c00" stroke-width="2" marker-end="url(#arrowhead)"/>

  <!-- Main to Runtime -->
  <line x1="280" y1="180" x2="750" y2="180" stroke="#d32f2f" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="515" y="170" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#d32f2f">5. Start Runtime Loop</text>

  <!-- Runtime flow -->
  <line x1="840" y1="240" x2="830" y2="280" stroke="#4caf50" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="830" y1="330" x2="830" y2="350" stroke="#4caf50" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="830" y1="400" x2="830" y2="420" stroke="#9c27b0" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="830" y1="470" x2="830" y2="490" stroke="#4caf50" stroke-width="2" marker-end="url(#arrowhead)"/>

  <!-- Data objects flow -->
  <line x1="910" y1="300" x2="950" y2="300" stroke="#ffc107" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="910" y1="440" x2="950" y2="440" stroke="#ffc107" stroke-width="2" marker-end="url(#arrowhead)"/>

  <!-- Loop back arrow -->
  <path d="M 920 200 Q 980 200 980 260 Q 980 280 840 280" fill="none" stroke="#d32f2f" stroke-width="2" marker-end="url(#arrowhead)" stroke-dasharray="5,5"/>
  <text x="960" y="240" font-family="Arial, sans-serif" font-size="10" fill="#d32f2f">Loop</text>

  <!-- Execution Steps Legend -->
  <rect x="100" y="450" width="300" height="120" rx="8" fill="#f8f9fa" stroke="#6c757d" stroke-width="1" stroke-dasharray="3,3"/>
  <text x="120" y="470" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#495057">Execution Sequence:</text>
  <text x="120" y="490" font-family="Arial, sans-serif" font-size="10" fill="#6c757d">1. main() creates domain services</text>
  <text x="120" y="505" font-family="Arial, sans-serif" font-size="10" fill="#6c757d">2. Wire dependencies in ProcessTrackUseCase</text>
  <text x="120" y="520" font-family="Arial, sans-serif" font-size="10" fill="#6c757d">3. Create ZeroMQDataHandler (DISH socket)</text>
  <text x="120" y="535" font-family="Arial, sans-serif" font-size="10" fill="#6c757d">4. Join UDP multicast group</text>
  <text x="120" y="550" font-family="Arial, sans-serif" font-size="10" fill="#6c757d">5. Enter infinite receiving loop</text>

  <!-- Performance Notes -->
  <rect x="750" y="580" width="420" height="100" rx="8" fill="#e8f4fd" stroke="#1976d2" stroke-width="1"/>
  <text x="770" y="600" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#1976d2">Architecture Benefits:</text>
  <text x="770" y="620" font-family="Arial, sans-serif" font-size="10" fill="#1565c0">â€¢ Hexagonal Architecture: Clean separation of concerns</text>
  <text x="770" y="635" font-family="Arial, sans-serif" font-size="10" fill="#1565c0">â€¢ RADIO/DISH Pattern: High-performance UDP multicast</text>
  <text x="770" y="650" font-family="Arial, sans-serif" font-size="10" fill="#1565c0">â€¢ Dependency Injection: Testable, configurable components</text>
  <text x="770" y="665" font-family="Arial, sans-serif" font-size="10" fill="#1565c0">â€¢ MISRA C++ 2023: Safety-critical coding standards</text>

</svg>
